name: Bundle Modxo

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pinout: 
          - official_pico
          - official_pico2
          - yd_rp2040
          - rp2040_zero_tiny
          - xiao_rp2040
          - ultra
        include:
          - pinout: official_pico
            pretty_name: Official Pico
            output_name: modxo_official_pico
          - pinout: official_pico2
            pretty_name: Official Pico 2
            output_name: modxo_official_pico2
          - pinout: yd_rp2040
            pretty_name: YD-RP2040
            output_name: modxo_yd_rp2040
          - pinout: rp2040_zero_tiny
            pretty_name: RP2040-Zero-Tiny
            output_name: modxo_rp2040_zero_tiny
          - pinout: xiao_rp2040
            pretty_name: XIAO-RP2040
            output_name: modxo_xiao_rp2040
          - pinout: ultra
            pretty_name: Ultra
            output_name: modxo_ultra


    steps:
      - uses: actions/checkout@v4

      - name: Install Dependancies
        run: sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib

      - name: Get Pico SDK
        run: git clone --branch 2.0.0 --recurse-submodules https://github.com/raspberrypi/pico-sdk.git

      - name: Create Build Folder
        run: |
          mkdir build
          mkdir output

      - name: Build Modxo ${{ matrix.pretty_name }}
        uses: threeal/cmake-action@v2
        id: cmake
        with:
          options: |
            PICO_SDK_PATH=${{ github.workspace }}/pico-sdk
            MODXO_PINOUT=${{ matrix.pinout }}

      - name: Copy files
        run: |
          cp ${{ steps.cmake.outputs.build-dir }}/${{ matrix.output_name }}.bin ${{ github.workspace }}/output/
          cp ${{ steps.cmake.outputs.build-dir }}/${{ matrix.output_name }}.uf2 ${{ github.workspace }}/output/

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pretty_name }}
          path: ${{ github.workspace }}/output/*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        id: artifacts
        with:
          path: pipeline/build/artifacts
          merge-multiple: true

      - name: List Files
        run: |
          ls -la ${{ steps.artifacts.outputs.download-path }}

      - name: Create Draft Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          draft: true
          files: |
            ${{ steps.artifacts.outputs.download-path }}/*

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ steps.artifacts.outputs.download-path }}/*

